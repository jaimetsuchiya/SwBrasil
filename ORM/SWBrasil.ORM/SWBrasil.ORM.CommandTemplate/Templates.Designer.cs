//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SWBrasil.ORM.CommandTemplate {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Templates : global::System.Configuration.ApplicationSettingsBase {
        
        private static Templates defaultInstance = ((Templates)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Templates())));
        
        public static Templates Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\nSELECT \n\t{0}\nFROM\n\t{1}\nWHERE\n\t{2}")]
        public string Procedure_Select {
            get {
                return ((string)(this["Procedure_Select"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DELETE FROM {0} WHERE {1}")]
        public string Procedure_Delete {
            get {
                return ((string)(this["Procedure_Delete"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"IF EXISTS ( SELECT 1 FROM sys.objects WHERE type='P' AND name='{0}')
	DROP PROC {0}
GO


CREATE PROC dbo.{0} 
(
	{1}
	,@AbreTransacao		char(1)		= 'N'
	,@CodigoRetorno		int			=  0	output
	,@DescricaoRetorno	varchar(max)= ''	output
) AS
BEGIN

	DECLARE @TransacaoAberta char(1)
		SET @TransacaoAberta = 'N'

	BEGIN TRY

		IF @AbreTransacao = 'S'
		BEGIN
			BEGIN TRAN 
			SET @TransacaoAberta = 'S'
		END


		{2}


		SELECT 	 @CodigoRetorno		= 0
				,@DescricaoRetorno	= ''


		IF @TransacaoAberta = 'S'
		BEGIN
			COMMIT TRAN
			SET @TransacaoAberta = 'N'
		END

	END TRY
	BEGIN CATCH

		SELECT 	 @CodigoRetorno		= -9
				,@DescricaoRetorno	= 'Erro de Processamento'
				

		IF @TransacaoAberta = 'S'
		BEGIN
			ROLLBACK TRAN
			SET @TransacaoAberta = 'N'
		END

	END CATCH

END
GO
")]
        public string Procedure_Base {
            get {
                return ((string)(this["Procedure_Base"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\n--SAVE\nIF EXISTS( SELECT 1 FROM {0} WHERE {1})\nBEGIN\n\n\tUPDATE\n\t\t{0}\n\tSET\n\t\t{2}\n\t" +
            "WHERE\n\t\t{1}\n\nEND\nELSE\nBEGIN\n\n\tINSERT\n\t\tINTO {0}\n\t\t(\n\t\t\t{3}\n\t\t)\n\t\tVALUES\n\t\t(\n\t\t\t{" +
            "4}\n\t\t)\n\n\t{5}\n\nEND")]
        public string Procedure_Save {
            get {
                return ((string)(this["Procedure_Save"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"using System;
using Napier.Data;
using Napier.Mapper;

namespace {3}.Data.Models
{
	[MapperClass(Storable = ""{0}"")]
    public class {0} : DataAccessLibrary
    {
        
        {1}

        #region Persistence Methods

        public new int Save()
        {
            return base.Save();
        }

        public new int Delete()
        {
            return base.Delete();
        }

        #endregion Persistence Methods
		
		#region Search Methods
		
		{2}

		#endregion Search Methods
    }
}
")]
        public string NapierModel {
            get {
                return ((string)(this["NapierModel"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"

<Storable name=""mcs{0}"">
    <Execution cod=""SEL"">
      <Summary>SEL Summary</Summary>
      <Table>{0}</Table>
      <Inputs>
       {1}
      </Inputs>
    </Execution>
    <Execution cod=""INS"">
      <Summary>INS Summary</Summary>
      <Table>{0}</Table>
      <Inputs>
        {2}
      </Inputs>
    </Execution>
    <Execution cod=""UPD"">
      <Summary>UPD Summary</Summary>
      <Table>{0}</Table>
      <Inputs>
        {1}
      </Inputs>
    </Execution>
    <Execution cod=""DEL"">
      <Summary>DEL Summary</Summary>
      <Table>{0}</Table>
      <Inputs>
        {3}
      </Inputs>
    </Execution>
  </Storable>

")]
        public string Napier_Execution_XML {
            get {
                return ((string)(this["Napier_Execution_XML"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n<div class=\"form-group\">\r\n\t<label for=\"{0}\">{0}</label><br />\r\n\t<input value=\"@" +
            "Model.{0}\" type=\"text\" id=\"{0}\" name=\"{0}\"  class=\"form-control\" {1} />\r\n</div>\r" +
            "\n")]
        public string HtmlInput {
            get {
                return ((string)(this["HtmlInput"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace {3}.Common
{
	[NapierClassMapper(""{2}"")]
	public class {0}
	{
		{1}
	}
}
")]
        public string DTOModel {
            get {
                return ((string)(this["DTOModel"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("using System;\r\nusing System.Collections.Generic;\r\nusing System.Data;\r\nusing Syste" +
            "m.Linq;\r\nusing System.Net;\r\nusing System.Net.Http;\r\nusing System.Web.Http;\r\nusin" +
            "g System.Web.Http.Description;\r\nusing WebApi.OutputCache.V2;\r\n\r\nusing {NAMESPACE" +
            "}.Core;\r\nusing {NAMESPACE}.Data;\r\nusing {NAMESPACE}.Service.Infrastructure;\r\nusi" +
            "ng {NAMESPACE}.Service.Models;\r\nusing {NAMESPACE}.Common;\r\nusing {NAMESPACE}.Com" +
            "mon.Integration;\r\n\r\n\r\nnamespace {NAMESPACE}.Service.Controllers\r\n{\r\n\tpublic clas" +
            "s {GROUP}Controller : BaseController\r\n    {\r\n\t\r\n\t\t#region CRUD\r\n\t\t\r\n        [Htt" +
            "pGet]\r\n        [Route(\"api/{GROUP}/{TABLE_NAME}/{id}\")]\r\n        [ResponseType(t" +
            "ypeof(OutputTransport<{TABLE_NAME}DTO>))]\r\n        [TokenValidation]\r\n        pu" +
            "blic HttpResponseMessage Get{TABLE_NAME}(object id)\r\n        {\r\n            Outp" +
            "utTransport<{TABLE_NAME}DTO> ret = new OutputTransport<{TABLE_NAME}DTO>();\r\n    " +
            "        ret.Data = _{TABLE_NAME}BO.FindById(id);\r\n\r\n            return Request.C" +
            "reateResponse<OutputTransport<{TABLE_NAME}DTO>>(HttpStatusCode.OK, ret);\r\n      " +
            "  }\r\n\r\n\t\t\r\n        [HttpPost]\r\n        [Route(\"api/{GROUP}/{TABLE_NAME}/Search\")" +
            "]\r\n        [ResponseType(typeof(OutputTransport<List<{TABLE_NAME}DTO>>))]\r\n     " +
            "   [TokenValidation]\r\n        public HttpResponseMessage Search{TABLE_NAME}s({TA" +
            "BLE_NAME}Args args)\r\n        {\r\n            OutputTransport<List<{TABLE_NAME}DTO" +
            ">> ret = new OutputTransport<List<{TABLE_NAME}DTO>>();\r\n            ret.Data = _" +
            "{TABLE_NAME}BO.Search(args);\r\n\r\n            return Request.CreateResponse<Output" +
            "Transport<List<{TABLE_NAME}DTO>>>(HttpStatusCode.OK, ret);\r\n        }\r\n\t\t\r\n\t\t\r\n " +
            "       [HttpPost]\r\n        [Route(\"api/{GROUP}/{TABLE_NAME}\")]\r\n        [Respons" +
            "eType(typeof(OutputTransport<{TABLE_NAME}DTO>))]\r\n        [TokenValidation]\r\n\t\t[" +
            "ModelValidationHandling()]\r\n        public HttpResponseMessage Save{TABLE_NAME}(" +
            "{TABLE_NAME}DTO model)\r\n        {\r\n            OutputTransport<{TABLE_NAME}DTO> " +
            "ret = new OutputTransport<{TABLE_NAME}DTO>();\r\n\t\t\tret = _{TABLE_NAME}BO.Salvar(n" +
            "ew InputTransport<{TABLE_NAME}DTO>() { Data = model, UserName = base.UserInfo.lo" +
            "gon });\r\n\r\n            return Request.CreateResponse<OutputTransport<{TABLE_NAME" +
            "}DTO>>(HttpStatusCode.OK, ret);\r\n        }\r\n\r\n\t\t#endregion CRUD\r\n\t}\r\n}\r\n")]
        public string RESTController {
            get {
                return ((string)(this["RESTController"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("using Newtonsoft.Json;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing S" +
            "ystem.Configuration;\r\nusing System.Linq;\r\nusing System.Net.Http;\r\nusing System.W" +
            "eb;\r\nusing {NAMESPACE}.Common;\r\n\r\nnamespace {NAMESPACE}.Web.UI.WebApiProxy\r\n{\r\n " +
            "   public class {TABLE_NAME}Proxy : BaseProxy\r\n\t{\r\n\t\tpublic OutputTransport<{TAB" +
            "LE_NAME}DTO> Get{TABLE_NAME}(object id)\r\n\t\t{\r\n\t\t\tOutputTransport<{TABLE_NAME}DTO" +
            "> ret = new OutputTransport<{TABLE_NAME}DTO>();\r\n\t\t\tstring  uri = base.ServiceBa" +
            "seURI(\"ServiceURI.{GROUP}\");\r\n\t\t\turi += \"{TABLE_NAME}\";\r\n\r\n\t\t\tstring content = D" +
            "oRequest(uri, \"GET\", null);\r\n\t\t\tif (string.IsNullOrEmpty(content) == false)\r\n\t\t\t" +
            "\tret = JsonConvert.DeserializeObject<OutputTransport<{TABLE_NAME}DTO>>(content);" +
            "\r\n\t\t\telse\r\n\t\t\t\tret.Code = -100;\r\n\r\n\t\t\treturn ret;\r\n\t\t}\t\r\n\t\t\r\n\t\tpublic OutputTran" +
            "sport<{TABLE_NAME}DTO> Search{TABLE_NAME}({TABLE_NAME}Args args)\r\n\t\t{\r\n\t\t\tstring" +
            " jsonString = JsonConvert.SerializeObject(args);\r\n\t\t\tStringContent strContent = " +
            "new StringContent(jsonString, System.Text.Encoding.UTF8, \"application/json\");\r\n\r" +
            "\n\t\t\tOutputTransport<{TABLE_NAME}DTO> ret = new OutputTransport<{TABLE_NAME}DTO>(" +
            ");\r\n\t\t\tstring  uri = base.ServiceBaseURI(\"ServiceURI.{GROUP}\");\r\n\t\t\turi += \"{TAB" +
            "LE_NAME}/Search\";\r\n\r\n\t\t\tstring content = DoRequest(uri, \"POST\", strContent);\r\n\t\t" +
            "\tif (string.IsNullOrEmpty(content) == false)\r\n\t\t\t\tret = JsonConvert.DeserializeO" +
            "bject<OutputTransport<{TABLE_NAME}DTO>>(content);\r\n\t\t\telse\r\n\t\t\t\tret.Code = -100;" +
            "\r\n\r\n\t\t\treturn ret;\r\n\t\t}\t\r\n\t\t\r\n\t\tpublic OutputTransport<{TABLE_NAME}DTO> Save{TAB" +
            "LE_NAME}({TABLE_NAME}DTO model)\r\n\t\t{\r\n\t\t\tstring jsonString = JsonConvert.Seriali" +
            "zeObject(model);\r\n\t\t\tStringContent strContent = new StringContent(jsonString, Sy" +
            "stem.Text.Encoding.UTF8, \"application/json\");\r\n\r\n\t\t\tOutputTransport<{TABLE_NAME}" +
            "DTO> ret = new OutputTransport<{TABLE_NAME}DTO>();\r\n\t\t\tstring  uri = base.Servic" +
            "eBaseURI(\"ServiceURI.{GROUP}\");\r\n\t\t\turi += \"{TABLE_NAME}\";\r\n\r\n\t\t\tstring content " +
            "= DoRequest(uri, \"POST\", strContent);\r\n\t\t\tif (string.IsNullOrEmpty(content) == f" +
            "alse)\r\n\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tOutputTransport<{TABLE_NAME}DTO> ret = Json" +
            "Convert.DeserializeObject<OutputTransport<{TABLE_NAME}DTO>>(content);\r\n\t\t\t\t\t\tret" +
            "urn ret;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tOutputTransport<string> tmp = JsonCo" +
            "nvert.DeserializeObject<OutputTransport<string>>(content);\r\n\t\t\t\t\t\treturn new Out" +
            "putTransport<{TABLE_NAME}DTO>() { Code = tmp.Code, Message = tmp.Message + \"\\n\" " +
            "+ tmp.Data };\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tret.Code = -10;\r\n\r\n\t\t\treturn ret;\r\n\t\t" +
            "}\t\r\n\t}\r\n}\r\n")]
        public string PROXYMethods {
            get {
                return ((string)(this["PROXYMethods"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("@{\r\n    ViewBag.Title = \"Cadastro de {TABLE_NAME}\";\r\n}\r\n\r\n<div class=\"panel panel" +
            "-default\" >\r\n    <div class=\"panel-heading\">\r\n        <h3 class=\"panel-title\">Ca" +
            "dastro de {TABLE_NAME}</h3>\r\n        <ul class=\"panel-controls\">\r\n            <l" +
            "i><a href=\"#\" class=\"panel-fullscreen\"><span class=\"fa fa-expand\"></span></a></l" +
            "i>\r\n            <li><a href=\"#\" class=\"panel-collapse\"><span class=\"fa fa-angle-" +
            "down\"></span></a></li>\r\n        </ul>\r\n    </div>\r\n    <!-- /.panel-heading -->\r" +
            "\n    <div class=\"panel-body\">\r\n        <br /><br />\r\n\r\n        <div class=\"tab-c" +
            "ontainer col-sm-12\">\r\n\t        <ul class=\"nav nav-tabs\" style=\"margin-left:0px;\"" +
            ">\r\n\t\t        <li class=\"active\"><a href=\"#home\" data-toggle=\"tab\">Critérios para" +
            " Pesquisa</a></li>\r\n\t\t        <li><a href=\"#resultado\" data-toggle=\"tab\">Resulta" +
            "do da Pesquisa</a></li>\r\n\t        </ul>\r\n\t        <div class=\"tab-content\" style" +
            "=\"margin-top:-10px;\">\r\n\t\t        <div class=\"tab-pane active cont\" id=\"home\" sty" +
            "le=\"height:200px;\">\r\n                    <form id=\"frmCriterios\">\r\n\t\t\t\t\t\t@{Html." +
            "RenderAction(\"{TABLE_NAME}Form\", \"Widget\");}\r\n                    </form>\r\n\t\t\t\t\t" +
            "<button type=\"button\" class=\"btn btn-success btn-flat\" id=\"btnPesquisar\" onclick" +
            "=\"btnPesquisar_Click\">Pesquisar</button>   \r\n\t\t        </div>\r\n\t\t        <div cl" +
            "ass=\"tab-pane cont\" id=\"resultado\">\r\n                    <br /><br />\r\n\t\t\t\t\t@{Ht" +
            "ml.RenderAction(\"{TABLE_NAME}Grid\", \"Widget\");}\r\n\t\t        </div>\r\n\t        </di" +
            "v>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"panel-footer\">\r\n        <butto" +
            "n type=\"button\" class=\"btn btn-success btn-flat\" id=\"btnNovo\" onclick=\"document." +
            "location.href=\'/{GROUP}/{TABLE_NAME}?id=0\'\">Novo {TABLE_NAME}</button>   \r\n    <" +
            "/div>\r\n</div>\r\n\r\n\r\n@section scripts {\r\n\r\n <script type=\"text/javascript\">\r\n\t$(do" +
            "cument).ready(function(){\r\n\t\t{TABLE_NAME}Grid.ServiceURI = \"/{GROUP}/{TABLE_NAME" +
            "}/Search\";\r\n\t\t{TABLE_NAME}Grid.LinkURI = \"/{GROUP}/{TABLE_NAME}?id=\";\r\n\t\t{TABLE_" +
            "NAME}Grid.ExibirLink = true;\r\n\t});\r\n\t\r\n\tfunction btnPesquisar_Click() {\r\n\t\tvar m" +
            "odel = _helper.formToModel($(\"#frmCriterios\"));\r\n\t\t{TABLE_NAME} Grid.Pesquisar(m" +
            "odel);\r\n\t\t$(\'.nav-tabs a[href=\"#resultado\"]\').tab(\'show\')\r\n\t}\r\n\t\t\t\r\n    </script" +
            ">   \r\n}")]
        public string ListPage {
            get {
                return ((string)(this["ListPage"]));
            }
            set {
                this["ListPage"] = value;
            }
        }
    }
}
